/* Declaração de varáveis globais para serem utilizados no código CSS */
:root {
  --background-primary: #121113; /* Aplica a cor selecionada no fundo da tag div de conteúdo do html */
  --foreground-primary: #1a191b; /* Aplica a cor selecionada no fundo da tag sidebar do html*/
  --foreground-secondary: #21121d; /* Aplica a cor selecionada na tag siderbar do html */
  --boder-primary: #3c393f; /* Aplica a cor selecionada na borda dos elementos criados no html */
  --boder-secondary: #692955; /* Aplica a cor selecionada na borda dos elementos quando o mouse passa sobre o elemento */
  --primary: #d6409f; /* Aplica a cor selecionada em alguns elementos selecionados da página html */
  --secondary: #232225; /* Aplica a cor selecionada em alguns elementos selecionados da página html */
  --text-color: #eeeef0; /* Aplica a cor seleonada em texto do html */
  --text-color-question: #b5b2bc; /* Aplica a cor seleonada em texto do html */
  --text-color-disabled: #6f6d78; /* Aplica a cor seleonada em texto do html */
}

* {
  margin: 0; 
  padding: 0;
  border: 0;
  box-sizing: border-box;

  font-family: "IBM Plex Sans", sans-serif;
  font-style: normal;
  font-size: 100%;
}

body {
  background-color: var(--background-primary);
  color: var(--text-color);
}

.container {
  width: 100%; /* Define largura */
  height: 100vh; /* Define a altura - 100vh significa que irá aplicar a altura da tela ao tamanho que ela for, independente da medida da tela */
  display: flex; /* Define que pode-se posicionar os elementos de forma flexivel (se ajusta ao tamanho da tela) */
}

.sidebar {
  background-color: var(--background-primary);
  width: 400px; /* Define largura em pixel */
  height: 100%; /* Define a altura em % */
  border-right: 1px solid var(--boder-primary); /* border-right: define a borda apenas na direita - 1px: - define o tamnho de 1 pixel - solid: define que o estilo da borda é sólido */
  padding: 30px 0; /* Espaçamento interno da sidebar (do limite da caixa para dentro). Pode-se definir os 4 lados, aqui definimos apenas dois, onde o primeiro é aplicado encima e embaixo e o segundo para os dois lados*/
}

details {
  width: 100%;
  max-width: 600px;
  padding-bottom: 15px;
  font-weight: 300;
}

.suggestion {
  border-bottom: 1px solid var(--boder-primary);
}

details summary {
  cursor: pointer;
  padding: 5px 10px;
  list-style: none; /* Define um estilo para lista - none: retira qualquer estilo já presente */
  display: flex; /* Define que pode-se posicionar os elementos de forma flexivel (se ajusta ao tamanho da tela) */
  justify-content: space-between; /* Irá justificar o conteúdo e space-between irá colocar um espaço entre elementos, ou seja, cada elemento em uma ponta específica */
}

/* subclasse after irá aplicar estilo no elemento especifico da clasee dentro dele*/
details summary::after {
  content: "△";/* Adiciona a String entre "" no local escolhido anteriormente */
  transition: rotate 200ms ease-in; /* Aplica uma transição de animação de rotação em 200 milesegundos - ease-in: efeito padrão da transição */
}

/* Aplicará esse estilo, quando a tag estiver aberta e a subclasse after irá aplicar estilo no elemento especifico da clasee dentro dele*/
details[open] summary::after {
  content: "△"; /* Adiciona a String entre "" no local escolhido anteriormente */
  transition: rotate 200ms ease-out; /* Aplica uma transição de animação de rotação em 200 milesegundos - ease-out: contrário do ease-in */
  rotate: 180deg; /* Aplica uma rotação de 180 graus */
}

details button {
  display: block;
  width: 85%;
  margin: 0 auto;
  margin-top: 8px; /* Margem superior */
  padding: 5px;
  background-color: var(--secondary);
  border: 1px solid var(--boder-primary);
  border-radius: 4px;
  color: var(--text-color);
}

.suggestion summary {
  background-color: var(--primary);
}

.content {
  width: 100%;
  height: 100%;
  display: flex;
  padding: 0 150px;
  flex-direction: column;
}

.box-home {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 4px; /* Adiciona espaçamento igual em todos os itens */
  text-align: center;
  height: 100%;
}

.box-home span {
  font-weight: 500;
}

.box-home h1 {
  font-size: 3rem; /* Adiciona um tamanho 3 vezes maior que o tamanho da fonte */
  font-weight: 600;
}

.box-home h1 span {
  color: var(--primary);
  font-weight: 600;
}

.box-home p {
  font-weight: 300;
}

.box-input {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.box-input textarea {
  min-height: 40px; /* Tamanho minimo de 40 pixels*/
  height: auto;
  resize: vertical; /* Só pode ser redimensionada na vertical */
  padding: 8px;
  background-color: transparent;
  border: 1px solid var(--boder-primary);
  border-radius: 4 px; /* Adiciona borda arredondada */
  outline: none;
  color: var(--text-color);
}

.box-input button {
  width: 170px;
  margin-left: auto;
  padding: 8px;
  border-radius: 4px;
  background-color: var(--primary);
  color: var(--text-color);
}

.box-footer {
  width: 100%;
  padding: 20px;
}

.box-footer p {
  text-align: center;
  font-weight: 500;
}

.box-footer p span {
  color: var(--primary);
}

.box-chat {
  display: flex;
  flex-direction: column;
  gap: 15px; /* Espaço entre uma caixa e outra */
  height: 100%;
  padding-top: 30px;
}

/* Aplicará o estilo ao primeiro elemento "filho" que vier após a declaração da classe box-chat */
.box-chat > h1 {
  font-size: 2.5rem;
  font-weight: 400;
}

.box-chat > h1 span {
  color: var(--primary);
}

.question {
  width: 100%;
  background-color: var(--foreground-primary);
  padding: 20px 15px;
  border: 1px solid var(--boder-primary);
  border-radius: 4px;
}

.question h2 {
  display: flex;
  gap: 8px;
  align-items: center;
  font-size: 1.5rem;
  font-weight: 500;
  margin-bottom: 15px;
  color: var(--text-color-question);
}

.question p {
  font-weight: 300;
}

.answer {
  width: 100%;
  background-color: var(--foreground-primary);
  border: 1px solid var(--boder-primary);
  border-radius: 4px;
}

.answer h2 {
  padding: 10px 15px;
  background-color: var(--secondary);
  border-bottom: 1px solid var(--boder-primary);
  font-weight: 400;
}

.answer p {
  padding: 20px 15px;
  font-weight: 300;
}

.feedback {
  width: 100%;
  padding: 20px 14px;
  background-color: var(--foreground-secondary);
  border: 1px solid var(--boder-secondary);
  border-radius: 4px;
}

.feedback h2 {
  font-size: 1.8rem;
  text-align: center;
  margin-bottom: 20px;
}

.feedback h2 span {
  color: var(--primary);
}

.feedback p {
  margin-bottom: 20px;
  font-weight: 300;
}

.feedback .actions {
  display: flex;
  justify-content: center;
  gap: 20px;
  padding-top: 20px;
  border-top: 1px solid var(--boder-secondary);
}

.feedback .actions button {
  width: 170px;
  padding: 8px;
  border-radius: 4px;
  background-color: var(--primary);
  color: var(--text-color);
}